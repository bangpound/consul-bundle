parameters:
    consul.host: http://127.0.0.1:8500

services:
    consul.client:
        public: false
        class: SensioLabs\Consul\Client
        arguments:
            - []
            - '@logger'
            - '@consul.guzzle.client'
        tags:
            - { name: monolog.logger, channel: consul }

    consul.service:
        arguments:
            - '@consul.client'
        abstract: true

    SensioLabs\Consul\Services\Agent:
        parent: consul.service
    SensioLabs\Consul\Services\AgentInterface: '@SensioLabs\Consul\Services\Agent'

    SensioLabs\Consul\Services\Catalog:
        parent: consul.service
    SensioLabs\Consul\Services\CatalogInterface: '@SensioLabs\Consul\Services\Catalog'

    SensioLabs\Consul\Services\Health:
        parent: consul.service
    SensioLabs\Consul\Services\HealthInterface: '@SensioLabs\Consul\Services\Health'

    SensioLabs\Consul\Services\KV:
        parent: consul.service
    SensioLabs\Consul\Services\KVInterface: '@SensioLabs\Consul\Services\KV'

    SensioLabs\Consul\Services\Session:
        parent: consul.service
    SensioLabs\Consul\Services\SessionInterface: '@SensioLabs\Consul\Services\Session'

    ConsulBundle\Service\Event:
        parent: consul.service
    ConsulBundle\Service\EventInterface: '@ConsulBundle\Service\Event'

    consul.guzzle.client:
        public: false
        class: GuzzleHttp\Client
        arguments:
            -
                base_uri: http://127.0.0.1:8500
                http_errors: false

    consul.controller.proxy:
        class: ConsulBundle\Controller\ProxyController
        arguments: ['@consul.client']

    consul.listener:
        class: ConsulBundle\EventListener\ConsulListener
        tags:
            - { name: kernel.event_listener, event: kernel.view, method: onKernelView }
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
